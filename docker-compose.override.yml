version: "3.8"

services:

  reverse-proxy:
    labels:
      # HTTP dashboard router
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`${TRAEFIK_DASHBOARD_DOMAIN?}`)
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
      # HTTPS dashboard router
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`${TRAEFIK_DASHBOARD_DOMAIN?}`)
      - traefik.http.routers.traefik-dashboard-https.tls=true
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=letsencrypt
      # - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
    command:
      # Enable Docker as a provider
      - --providers.docker
      # Disable automatic exposure of Docker services
      - --providers.docker.exposedbydefault=false
      # Entrypoints ports
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      # TLS certificates resolver
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_ACME_EMAIL?}
      - --certificatesresolvers.letsencrypt.acme.storage=/certificates/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # Traefik dashboard
      - --api

  backend:
    image: ${BACKEND_IMAGE?}-dev
    build:
      context: ./server
      dockerfile: docker/Dockerfile.dev
    env_file:
      - env/.env.dev
      - server/env/.env.dev
    volumes:
      - ./server:/app
    ports:
      - ${BACKEND_DEV_PORT?}:${BACKEND_DEV_PORT?}
    healthcheck:
        disable: true

  rq-worker:
    image: ${RQ_WORKER_DOCKER_IMAGE?}-dev
    env_file:
      - env/.env.dev
      - server/env/.env.dev

  redis:
    ports:
        - ${REDIS_PORT?}:${REDIS_PORT?}

  pgadmin:
    image: dpage/pgadmin4:8.0
    container_name: vaultexe-pgadmin
    restart: always
    env_file:
      - env/.env.dev
    depends_on:
      - db
    ports:
      - ${PGADMIN_EXTERNAL_PORT?}:${PGADMIN_INTERNAL_PORT?}
    environment:
      # This redirects all pgadmin logs to /dev/null
      GUNICORN_ACCESS_LOGFILE: "/dev/null"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - ${VAULTEXE_PROXY_NETWORK?}
    labels:
      # Enable Traefik
      - traefik.enable=true
      # Attach to the traefik-public network
      - traefik.docker.network=${VAULTEXE_PROXY_NETWORK?}
      # HTTP pgadmin dashboard service
      - traefik.http.services.pgadmin-dashboard.loadbalancer.server.port=${PGADMIN_INTERNAL_PORT?}
      # HTTP pgadmin dashboard router
      - traefik.http.routers.pgadmin-dashboard-http.entrypoints=http
      - traefik.http.routers.pgadmin-dashboard-http.rule=Host(`${PGADMIN_DOMAIN?}`)
      - traefik.http.routers.pgadmin-dashboard-http.middlewares=https-redirect
      # HTTPS pgadmin dashboard router
      - traefik.http.routers.pgadmin-dashboard-https.entrypoints=https
      - traefik.http.routers.pgadmin-dashboard-https.rule=Host(`${PGADMIN_DOMAIN?}`)
      - traefik.http.routers.pgadmin-dashboard-https.tls=true
      - traefik.http.routers.pgadmin-dashboard-https.tls.certresolver=letsencrypt

## Use desktop version of redisinsight better :)
## https://redis.com/redis-enterprise/redis-insight/
  # redisinsight:
  #     # Connect to host ip not localhost
  #     # Use redis service name as host
  #     # Use actual redis port
  #     image: redislabs/redisinsight:latest
  #     container_name: vaultexe-redisinsight
  #     depends_on:
  #       - redis
  #     env_file:
  #       - env/.env.dev
  #     ports:
  #       - ${RIPORT?}:${RIPORT?}
  #     volumes:
  #       - redisinsight-data:/db
  #     networks:
  #       - ${VAULTEXE_PROXY_NETWORK?}
  #     labels:
  #       # Enable Traefik
  #       - traefik.enable=true
  #       # Attach to the traefik-public network
  #       - traefik.docker.network=${VAULTEXE_PROXY_NETWORK?}
  #       # HTTP redisinsight dashboard service
  #       - traefik.http.services.redisinsight-dashboard.loadbalancer.server.port=${RIPORT?}
  #       # HTTP redisinsight dashboard router
  #       - traefik.http.routers.redisinsight-dashboard-http.entrypoints=http
  #       - traefik.http.routers.redisinsight-dashboard-http.rule=Host(`${RIDOMAIN?}`)
  #       - traefik.http.routers.redisinsight-dashboard-http.middlewares=https-redirect
  #       # HTTPS redisinsight dashboard router
  #       - traefik.http.routers.redisinsight-dashboard-https.entrypoints=https
  #       - traefik.http.routers.redisinsight-dashboard-https.rule=Host(`${RIDOMAIN?}`)
  #       - traefik.http.routers.redisinsight-dashboard-https.tls=true
  #       - traefik.http.routers.redisinsight-dashboard-https.tls.certresolver=letsencrypt

volumes:
  pgadmin-data:
  redisinsight-data:

networks:
  vaultexe-proxy-network:
    external: false
